1, 2, 3, 4, 5

2


hasmap : 1-3,0-2



ans -4


forming logic :



i have one pair ( n1, n2 )  and the sum of the pairs to be divided by K


lets take the remainder : 
 r1 = n1%k;
 
 r2 = n2%k;
 
 if the sum of the pairs to be divisible by then their addition of the remainder should be k
 
 
 
 example take a pair n1 =1 and n2 =5  lets say k=2 ; 
 
 so calculation 
 
 r1 = n1%k = 1%2 = 1 
 
 r2 = n2%k = 5%2 = 1 
 
 so by logic r1+r2 should be == k  to be the sum of the pair to be divisible by k
 
 one more example :
 
 if we take the example of pair like this (2,4) 
 
 so r1 = 0  and r2 =0  right  if one remainder is 0 then other remainder must be 0 also 
 


we will take the help of a hashmap 

what we will do we will try to put the remainder in haspmap one by one , in running only we will calculate the answer

lets take the first example we have arrays  like :

1,2,3,4,5 

our k is 2 

we will take the number one by one using loop 



loop ()

{
 
first number means i==0;  first number is 1 

get the remainder which is   1%2 = 1   first number and hasmap is empty then put remainder and frequency in map 

remain > freq 

hammap [ 1-1 ]
lets take the second element which is 2  
calculate remainder 2%2 which is 0 , is there alreay 0 in hashmap with any freq 

no put the remainder and freq of 1 

now hashmap becomes : 

[1-1 , 0-1 ]

lets take the next element which is 3 calculate remainder 3%2 = 1   

how k-r = 2-1 = 1 is 1 is there nay hasmap yes there   

tempans is the freq  which is 1  

now tempans needs to get added to totalfreq = 0 

totalfreq is 1  

need increase the freq of 1 

so current map becomes [ 1-2 , 0-1]
now 


lets take the next element which is 4  calculate remainder which 4%2 = 0 
 
 is there alreay any 0 in map with freq yes   
 
 tempans is 1 
 
 add to total  so total becomes 2 
 
 increment the freq of 0 
 
 so now hasmmap becomes [1-2, 0-2]
 
 continue this process






 














